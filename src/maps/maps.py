class Maps:
    def __init__(self):
        self.maps = {
            1: [
                [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                [3, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3],
                [3, 0, 0, 0, 3, 0, 3, 3, 0, 3, 3],
                [3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3],
                [3, 0, 0, 0, 3, 0, 3, 3, 3, 0, 3],
                [3, 3, 0, 3, 3, 0, 3, 0, 3, 0, 3],
                [3, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3],
                [3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3],
            ],
            2: [
                [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
                [4, 0, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 0, 0, 0, 4],
                [4, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 4],
                [4, 0, 4, 4, 0, 0, 0, 4, 4, 4, 0, 4, 0, 4, 4, 4],
                [4, 4, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4],
                [4, 4, 4, 4, 0, 4, 0, 0, 4, 0, 4, 4, 4, 0, 4, 4],
                [4, 4, 0, 0, 0, 4, 4, 0, 0, 0, 4, 0, 4, 0, 0, 4],
                [4, 0, 0, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 0, 4, 4],
                [4, 4, 0, 4, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 4],
                [4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 1],
                [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            ],
            3: [
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 0, 5, 5, 0, 5, 0, 5, 0, 5, 5, 5, 0, 0, 0, 0, 5, 5, 5, 5, 0, 5, 5, 5],
                [5, 0, 5, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 5],
                [5, 0, 0, 0, 5, 5, 0, 5, 0, 5, 0, 0, 0, 0, 5, 5, 0, 5, 0, 5, 5, 0, 5, 5],
                [5, 0, 5, 0, 0, 5, 0, 0, 0, 5, 5, 5, 5, 0, 5, 5, 0, 0, 0, 5, 5, 0, 5, 5],
                [5, 0, 5, 0, 5, 5, 5, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 5],
                [5, 5, 0, 0, 0, 0, 5, 0, 5, 0, 5, 0, 5, 5, 5, 0, 5, 5, 5, 5, 0, 5, 0, 5],
                [5, 0, 0, 5, 5, 5, 5, 0, 5, 5, 5, 0, 5, 5, 5, 0, 5, 0, 0, 0, 0, 5, 0, 5],
                [5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 5, 0, 5, 0, 5, 0, 5, 5, 0, 5],
                [5, 0, 0, 5, 0, 5, 0, 5, 0, 0, 0, 5, 5, 0, 0, 0, 5, 0, 5, 0, 0, 0, 0, 5],
                [5, 0, 5, 5, 0, 5, 0, 0, 0, 5, 0, 5, 5, 5, 5, 0, 0, 0, 5, 5, 5, 0, 5, 5],
                [5, 0, 5, 0, 0, 5, 5, 0, 5, 5, 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 5],
                [5, 5, 5, 5, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 0, 5, 5, 0, 5, 0, 5, 5, 0, 5],
                [5, 0, 5, 0, 0, 5, 5, 5, 0, 5, 5, 5, 0, 5, 0, 0, 0, 0, 0, 0, 5, 0, 0, 5],
                [5, 0, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 5, 0, 5, 5, 5, 5, 5, 5, 0, 5, 5],
                [5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 5],
                [5, 5, 5, 5, 5, 0, 5, 5, 5, 0, 5, 5, 0, 0, 0, 5, 5, 0, 5, 5, 5, 5, 0, 5],
                [5, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 5, 5, 5],
                [5, 0, 0, 0, 5, 5, 5, 5, 0, 5, 0, 0, 0, 5, 5, 0, 5, 0, 5, 5, 0, 0, 0, 5],
                [5, 0, 5, 0, 5, 5, 0, 5, 0, 5, 0, 5, 0, 5, 5, 0, 5, 0, 0, 5, 0, 5, 5, 5],
                [5, 0, 5, 0, 0, 0, 0, 0, 0, 5, 0, 5, 0, 0, 0, 0, 5, 5, 0, 5, 0, 0, 0, 1],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
            ],
            4: [
                [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
                [6, 0, 6, 6, 6, 6, 6, 6, 0, 6, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 6, 6, 0, 0, 0, 6, 6, 6],
                [6, 0, 6, 0, 0, 0, 0, 6, 0, 6, 0, 6, 6, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 6, 0, 6, 6, 6],
                [6, 0, 6, 0, 6, 6, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 0, 0, 6, 6, 6, 6, 0, 6, 0, 0, 6, 6, 6, 6, 0, 0, 0, 6],
                [6, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 0, 6, 6, 6, 0, 6, 6, 0, 0, 6, 6, 6, 0, 0, 0, 6, 6, 0, 0, 6, 6, 6, 0, 6],
                [6, 6, 0, 6, 0, 6, 6, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 6, 6, 0, 0, 0, 6, 6, 0, 6, 6, 6, 0, 6, 6, 6, 6, 0, 6],
                [6, 6, 0, 6, 0, 0, 0, 0, 6, 0, 6, 6, 6, 0, 6, 6, 0, 6, 6, 6, 6, 0, 6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 6],
                [6, 6, 0, 6, 0, 6, 0, 6, 6, 0, 6, 6, 6, 0, 6, 0, 0, 0, 0, 0, 6, 0, 6, 6, 0, 0, 0, 6, 6, 0, 6, 6, 6, 6, 6],
                [6, 0, 0, 0, 0, 6, 0, 6, 6, 0, 6, 0, 0, 0, 0, 0, 6, 0, 6, 0, 0, 0, 0, 0, 0, 6, 0, 6, 6, 0, 0, 6, 0, 0, 6],
                [6, 0, 6, 0, 6, 6, 0, 6, 6, 0, 6, 0, 6, 6, 6, 6, 6, 0, 6, 6, 6, 6, 0, 6, 6, 6, 0, 6, 6, 6, 0, 6, 0, 6, 6],
                [6, 0, 6, 0, 6, 6, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 6, 6, 6, 0, 0, 0, 6, 0, 0, 0, 6, 0, 6, 0, 0, 6],
                [6, 0, 6, 0, 0, 0, 0, 6, 0, 6, 6, 6, 6, 6, 6, 6, 0, 6, 0, 0, 6, 6, 6, 6, 6, 6, 0, 6, 0, 6, 0, 6, 6, 0, 6],
                [6, 0, 6, 6, 6, 6, 0, 6, 0, 0, 0, 6, 6, 6, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 6, 0, 0, 6, 0, 6],
                [6, 6, 6, 6, 0, 6, 0, 6, 6, 6, 0, 0, 6, 0, 0, 6, 6, 6, 6, 0, 6, 6, 0, 6, 6, 6, 6, 6, 0, 6, 6, 0, 6, 0, 6],
                [6, 6, 0, 0, 0, 6, 0, 6, 0, 6, 6, 0, 6, 0, 6, 6, 6, 6, 0, 0, 6, 0, 0, 6, 6, 0, 0, 0, 0, 6, 6, 0, 6, 0, 6],
                [6, 6, 0, 6, 6, 6, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 6, 0, 0, 6, 6, 0, 6, 6, 0, 0, 6, 0, 6, 6, 0, 0, 6, 0, 6],
                [6, 6, 0, 6, 6, 6, 6, 6, 6, 6, 0, 0, 6, 6, 6, 0, 6, 0, 6, 6, 6, 0, 0, 6, 6, 6, 6, 0, 6, 6, 0, 6, 6, 0, 6],
                [6, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 6, 6, 6, 0, 0, 6, 6, 6, 0, 0, 0, 0, 0, 6, 0, 6],
                [6, 0, 6, 6, 6, 0, 6, 0, 6, 0, 6, 6, 6, 6, 6, 6, 0, 6, 0, 0, 6, 6, 6, 0, 0, 6, 6, 6, 6, 6, 6, 0, 0, 0, 6],
                [6, 0, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 6, 6, 0, 6, 6, 0, 6, 6, 6, 6, 0, 6, 0, 6, 6, 6, 6, 6, 0, 6, 6],
                [6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 6, 6, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 6, 6, 6, 6],
                [6, 6, 6, 6, 6, 0, 6, 0, 6, 6, 6, 0, 6, 0, 6, 6, 6, 0, 6, 6, 0, 6, 6, 6, 6, 0, 6, 6, 0, 6, 0, 6, 6, 6, 6],
                [6, 6, 6, 0, 0, 0, 6, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 6, 6, 0, 6, 6, 6, 0, 0, 6, 0, 0, 6, 0, 0, 6, 6, 6],
                [6, 6, 6, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 6, 6, 0, 6, 6, 0, 0, 0, 0, 0, 6, 6, 0, 6, 6, 6, 0, 0, 6, 6],
                [6, 6, 6, 0, 0, 0, 6, 6, 6, 0, 0, 0, 6, 0, 0, 6, 6, 0, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 6, 6, 6, 6, 0, 6, 6],
                [6, 0, 0, 0, 6, 0, 6, 0, 0, 0, 6, 0, 6, 0, 6, 6, 0, 0, 6, 0, 0, 0, 0, 6, 6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 6],
                [6, 0, 6, 0, 6, 0, 6, 0, 6, 6, 6, 0, 0, 0, 6, 6, 0, 6, 6, 0, 6, 6, 0, 0, 0, 6, 0, 0, 0, 0, 0, 6, 6, 0, 6],
                [6, 0, 6, 0, 6, 0, 0, 0, 6, 6, 0, 0, 6, 0, 0, 6, 0, 6, 0, 0, 0, 6, 6, 6, 0, 0, 0, 6, 6, 0, 6, 6, 6, 0, 6],
                [6, 0, 0, 0, 6, 6, 0, 6, 6, 6, 0, 6, 6, 6, 0, 6, 0, 0, 0, 6, 0, 0, 6, 6, 6, 6, 6, 6, 6, 0, 0, 6, 6, 0, 6],
                [6, 0, 6, 0, 6, 6, 0, 6, 0, 0, 0, 6, 6, 6, 0, 6, 0, 6, 6, 6, 6, 0, 6, 6, 6, 6, 6, 0, 0, 6, 0, 0, 6, 0, 6],
                [6, 0, 6, 0, 0, 0, 0, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 0, 6, 0, 6, 6, 6, 0, 0, 0, 6],
                [6, 0, 6, 6, 6, 6, 0, 0, 0, 0, 6, 6, 0, 6, 0, 6, 0, 6, 0, 0, 0, 0, 6, 6, 6, 0, 6, 0, 6, 0, 6, 0, 6, 6, 6],
                [6, 0, 6, 6, 6, 6, 6, 0, 6, 0, 0, 0, 0, 6, 0, 6, 0, 6, 6, 6, 6, 6, 6, 6, 6, 0, 6, 0, 6, 0, 6, 0, 0, 6, 6],
                [6, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 1],
                [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
            ]
        }


    def get_map(self, level):
        return self.maps.get(level, None)
